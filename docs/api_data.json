[  {    "type": "delete",    "url": "/issues/:id",    "title": "Supprimer une issue",    "name": "DeleteIssueByID",    "group": "Issue",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Identifiant unique pour chaque issue</p>"          }        ]      }    },    "error": {      "fields": {        "200": [          {            "group": "200",            "optional": false,            "field": "OK",            "description": "<p>Issue supprimée.</p>"          }        ],        "404": [          {            "group": "404",            "optional": false,            "field": "notFound",            "description": "<p>Issue non trouvée.</p>"          }        ],        "422": [          {            "group": "422",            "optional": false,            "field": "unprocessableEntity",            "description": "<p>L’entité fournie avec la requête est incompréhensible ou incomplète.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue"  },  {    "type": "get",    "url": "/issues/:id",    "title": "Afficher une issue",    "name": "GetIssueByID",    "group": "Issue",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Identifiant unique pour chaque issue</p>"          }        ]      },      "examples": [        {          "title": "Example id:",          "content": "\"5a9e92262cd05e805032d193\"",          "type": "String"        }      ]    },    "description": "<p>Cette route retourne l'issue, identifiée par son id.</p>",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Le statut de l'issue. Les différents statuts sont: &quot;new&quot;, &quot;inProgress&quot;, &quot;canceled&quot;, &quot;completed&quot;.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création de l'issue</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>La date de modification (dernière en date) de l'issue</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>L'id de l'issue</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>L'id du User ayant reporté l'issue</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>La description de l'issue</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "tags",            "description": "<p>Le tableau de tag(s) de l'issue</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "imageUrl",            "description": "<p>L'url de l'image illustrant l'issue</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "latitude",            "description": "<p>La latitude de l'endroit où se situe l'issue</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de l'endroit où se situe l'issue</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"status\": \"new\",\n    \"tags\": [\n        \"graffiti\",\n        \"mur\"\n    ],\n    \"_id\": \"5ab382d74eaec00d60f061df\",\n    \"latitude\": 48,\n    \"longitude\": 2.3,\n    \"user\": \"5a9e91e42cd05e805032d190\",\n    \"description\": \"Graffiti sur les murs\",\n    \"imageUrl\": \"img/graffitiMur16emeArrondissement.png\",\n    \"createdAt\": \"2018-03-22T10:17:59.071Z\",\n    \"updatedAt\": \"2018-03-22T10:17:59.071Z\",\n    \"__v\": 0\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "404": [          {            "group": "404",            "optional": false,            "field": "notFound",            "description": "<p>Issue non trouvée.</p>"          }        ],        "422": [          {            "group": "422",            "optional": false,            "field": "unprocessableEntity",            "description": "<p>L’entité fournie avec la requête est incompréhensible ou incomplète.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue"  },  {    "type": "get",    "url": "/issues/",    "title": "Lister toutes les issues",    "name": "GetIssuesList",    "group": "Issue",    "description": "<p>Cette route retourne toutes issues stockées dans la base de donnée. Pour chaque issue, on reçoit son id, son statut, sa date de création, sa date de modification (dernière en date), sa latitude, sa longitude, l'id du User ayant reporté l'issue, sa description (si existante), l'url de l'image illustrant l'issue (si existante), le(s) tag(s) (si existant(s)).</p>",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Le statut de l'issue. Les différents statuts sont: &quot;new&quot;, &quot;inProgress&quot;, &quot;canceled&quot;, &quot;completed&quot;.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création de l'issue</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>La date de modification (dernière en date) de l'issue</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>L'id de l'issue</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>L'id du User ayant reporté l'issue</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>La description de l'issue</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "tags",            "description": "<p>Le tableau de tag(s) de l'issue</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "imageUrl",            "description": "<p>L'url de l'image illustrant l'issue</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "latitude",            "description": "<p>La latitude de l'endroit où se situe l'issue</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de l'endroit où se situe l'issue</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n\"status\": \"new\",\n\"tags\": [],\n\"_id\": \"5ab382654eaec00d60f061de\",\n\"latitude\": 25,\n\"longitude\": 25,\n\"user\": \"5a9e91e42cd05e805032d190\",\n\"createdAt\": \"2018-03-22T10:16:05.377Z\",\n\"updatedAt\": \"2018-03-22T10:16:05.377Z\",\n\"__v\": 0\n},\n{\n\"status\": \"new\",\n\"tags\": [\n\"graffiti\",\n\"mur\"\n],\n\"_id\": \"5ab382d74eaec00d60f061df\",\n\"latitude\": 48,\n\"longitude\": 2.3,\n\"user\": \"5a9e91e42cd05e805032d190\",\n\"description\": \"Graffiti sur les murs\",\n\"imageUrl\": \"img/graffitiMur16emeArrondissement.png\",\n\"createdAt\": \"2018-03-22T10:17:59.071Z\",\n\"updatedAt\": \"2018-03-22T10:17:59.071Z\",\n\"__v\": 0\n},\n{\n\"status\": \"inProgress\",\n\"tags\": [],\n\"_id\": \"5ab3835a4eaec00d60f061e0\",\n\"latitude\": 46,\n\"longitude\": 6,\n\"user\": \"5a9e91e42cd05e805032d190\",\n\"description\": \"Panneau de limitation de vitesse cassé\",\n\"createdAt\": \"2018-03-22T10:20:10.434Z\",\n\"updatedAt\": \"2018-03-22T10:20:54.846Z\",\n\"__v\": 0\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue"  },  {    "type": "post",    "url": "/issues",    "title": "Créer une nouvelle issue",    "name": "PostIssue",    "group": "Issue",    "description": "<p>Cette route permet de créer une nouvelle issue. Il faut obligatoirement y indiquer l'id d'un User, une latitude, une longitude. Il est aussi possible d'indiquer un statut (si non indiqué, sera &quot;new&quot; par défaut), une description, une url de l'image montrant l'issue en question, des tags afin de catégoriser l'issue.</p>",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"new\"",              "\"inProgress\"",              "\"canceled\"",              "\"completed\""            ],            "optional": true,            "field": "status",            "description": "<p>Le statut de l'issue, par défaut &quot;new&quot;</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>L'id du User souhaitant reporter l'issue</p>"          },          {            "group": "Request body",            "type": "String",            "size": "..1000",            "optional": true,            "field": "description",            "description": "<p>La description de l'issue</p>"          },          {            "group": "Request body",            "type": "String[]",            "optional": true,            "field": "tags",            "description": "<p>Le tableau de tag(s) de l'issue</p>"          },          {            "group": "Request body",            "type": "String",            "size": "..500",            "optional": true,            "field": "imageUrl",            "description": "<p>L'url de l'image illustrant l'issue</p>"          },          {            "group": "Request body",            "type": "Integer",            "optional": false,            "field": "latitude",            "description": "<p>La latitude de l'endroit où se situe l'issue</p>"          },          {            "group": "Request body",            "type": "Integer",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de l'endroit où se situe l'issue</p>"          }        ]      },      "examples": [        {          "title": "Body Request Example:",          "content": "{\n\t\"status\": \"new\",\n\t\"latitude\": \"46\",\n\t\"longitude\": \"6\",\n\t\"user\": \"5a9e91e42cd05e805032d190\",\n\t\"description\": \"Panneau de limitation de vitesse cassé\",\n\t\"imageUrl\": \"img/panneauCasse.png\",\n\t\"tags\": [\"panneau\",\"cassé\",\"illisible\"]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "201": [          {            "group": "201",            "optional": false,            "field": "created",            "description": "<p>L'issue a été créée avec succès.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue"  },  {    "type": "put",    "url": "/issues/:id",    "title": "Modifier une issue",    "name": "UpdateIssueByID",    "group": "Issue",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Identifiant unique pour chaque issue</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"new\"",              "\"inProgress\"",              "\"canceled\"",              "\"completed\""            ],            "optional": true,            "field": "status",            "description": "<p>Le statut de l'issue, par défaut &quot;new&quot;</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "user",            "description": "<p>L'id du User ayant reporté l'issue</p>"          },          {            "group": "Request body",            "type": "String",            "size": "..1000",            "optional": true,            "field": "description",            "description": "<p>La description de l'issue</p>"          },          {            "group": "Request body",            "type": "String[]",            "optional": true,            "field": "tags",            "description": "<p>Le tableau de tag(s) de l'issue</p>"          },          {            "group": "Request body",            "type": "String",            "size": "..500",            "optional": true,            "field": "imageUrl",            "description": "<p>L'url de l'image illustrant l'issue</p>"          },          {            "group": "Request body",            "type": "Integer",            "optional": true,            "field": "latitude",            "description": "<p>La latitude de l'endroit où se situe l'issue</p>"          },          {            "group": "Request body",            "type": "Integer",            "optional": true,            "field": "longitude",            "description": "<p>La longitude de l'endroit où se situe l'issue</p>"          }        ]      },      "examples": [        {          "title": "Body Request Example:",          "content": "{\n\"role\":\"citizen\"\n}",          "type": "json"        }      ]    },    "description": "<p>Cette route permet de modifier une issue, identifiée par son id. On peut modifier soit un, soit plusieurs des attributs de l'issue.</p>",    "error": {      "fields": {        "200": [          {            "group": "200",            "optional": false,            "field": "OK",            "description": "<p>L'issue a été modifiée avec succès.</p>"          }        ],        "400": [          {            "group": "400",            "optional": false,            "field": "badRequest",            "description": "<p>Impossible de modifier l'issue d'une au non respect d'une contrainte</p>"          }        ],        "404": [          {            "group": "404",            "optional": false,            "field": "notFound",            "description": "<p>Issue non trouvée.</p>"          }        ],        "422": [          {            "group": "422",            "optional": false,            "field": "unprocessableEntity",            "description": "<p>L’entité fournie avec la requête est incompréhensible ou incomplète.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue"  },  {    "type": "delete",    "url": "/users/:id",    "title": "Supprimer un utilisateur",    "name": "DeleteUserByID",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Identifiant unique pour chaque utilisateur</p>"          }        ]      }    },    "description": "<p>Cette route supprime l'utilisateur, identifié par son id.</p>",    "error": {      "fields": {        "200": [          {            "group": "200",            "optional": false,            "field": "OK",            "description": "<p>Utilisateur supprimé.</p>"          }        ],        "404": [          {            "group": "404",            "optional": false,            "field": "notFound",            "description": "<p>Utilisateur non trouvé.</p>"          }        ],        "422": [          {            "group": "422",            "optional": false,            "field": "unprocessableEntity",            "description": "<p>L’entité fournie avec la requête est incompréhensible ou incomplète.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users/:id",    "title": "Afficher un utilisateur",    "name": "GetUserByID",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Identifiant unique pour chaque utilisateur</p>"          }        ]      },      "examples": [        {          "title": "Example id:",          "content": "\"5aa1216fde3cb40014969c61\"",          "type": "String"        }      ]    },    "description": "<p>Cette route retourne l'utilisateur, identifié par son id.</p>",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Le role de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>L'id de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": true,            "field": "directedIssuesCount",            "description": "<p>Le nombre total de problèmes reportés par l'utilisateur</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n\"role\": \"manager\",\n\"createdAt\": \"2018-03-08T11:41:35.018Z\",\n\"_id\": \"5aa1216fde3cb40014969c61\",\n\"firstName\": \"Pierre\",\n\"lastName\": \"Baud\",\n\"__v\": 0\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "404": [          {            "group": "404",            "optional": false,            "field": "notFound",            "description": "<p>Utilisateur non trouvé.</p>"          }        ],        "422": [          {            "group": "422",            "optional": false,            "field": "unprocessableEntity",            "description": "<p>L’entité fournie avec la requête est incompréhensible ou incomplète.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users/:id/issues",    "title": "Afficher les problèmes d'un utilisateur",    "name": "GetUserIssuesByID",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Identifiant unique pour chaque utilisateur</p>"          }        ]      }    },    "description": "<p>Cette route retourne tous les problèmes reportés par l'utilisateur, identifié par son id.</p>",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>L'état du problème.</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "tags",            "description": "<p>Tableau de Strings décrivants le problème.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>L'identifiant du problème.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "latitude",            "description": "<p>La latitude où se trouve le problème.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "longitude",            "description": "<p>La longitude où se trouve le problème.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>L'identifiant de l'utulisateur qui a reporté le problème.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>La date du report du problème.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>La date de la dernière mise à jour du problème.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n\"status\": \"new\",\n\"tags\": [],\n\"_id\": \"5aa131dbde3cb40014969c66\",\n\"latitude\": 1,\n\"longitude\": 10,\n\"user\": \"5aa1216fde3cb40014969c61\",\n\"createdAt\": \"2018-03-08T12:51:39.198Z\",\n\"updatedAt\": \"2018-03-08T12:51:39.198Z\",\n\"__v\": 0\n},\n{\n\"status\": \"new\",\n\"tags\": [],\n\"_id\": \"5aa131eade3cb40014969c67\",\n\"latitude\": 1,\n\"longitude\": 3,\n\"user\": \"5aa1216fde3cb40014969c61\",\n\"createdAt\": \"2018-03-08T12:51:54.269Z\",\n\"updatedAt\": \"2018-03-08T12:51:54.269Z\",\n\"__v\": 0\n},\n{\n\"status\": \"new\",\n\"tags\": [],\n\"_id\": \"5aa13218de3cb40014969c68\",\n\"latitude\": 1,\n\"longitude\": 3,\n\"user\": \"5aa1216fde3cb40014969c61\",\n\"createdAt\": \"2018-03-08T12:52:40.470Z\",\n\"updatedAt\": \"2018-03-08T12:52:40.470Z\",\n\"__v\": 0\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "404": [          {            "group": "404",            "optional": false,            "field": "notFound",            "description": "<p>Utilisateur non trouvé.</p>"          }        ],        "422": [          {            "group": "422",            "optional": false,            "field": "unprocessableEntity",            "description": "<p>L’entité fournie avec la requête est incompréhensible ou incomplète.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users/",    "title": "Lister tous les utilisateurs",    "name": "GetUsersList",    "group": "User",    "description": "<p>Cette route retourne tous les utilisateurs stockés dans la base de donnée. Pour chaque utilisateur, on reçoit son role, sa date de création, son prénom, son nom et s'il a déjà indiqué des problèmes, ses problèmes.</p>",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Le role de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>L'id de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de l'utilisateur</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "directedIssuesCount",            "description": "<p>Le nombre total de problèmes reportés par l'utilisateur</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n\"role\": \"manager\",\n\"createdAt\": \"2018-03-08T11:41:35.018Z\",\n\"_id\": \"5aa1216fde3cb40014969c61\",\n\"firstName\": \"Pierre\",\n\"lastName\": \"Baud\",\n\"__v\": 0,\n\"directedIssuesCount\": 2\n},\n{\n\"role\": \"manager\",\n\"createdAt\": \"2018-03-08T11:41:49.735Z\",\n\"_id\": \"5aa1217dde3cb40014969c62\",\n\"firstName\": \"Sami\",\n\"lastName\": \"Othmane\",\n\"__v\": 0\n},\n{\n\"role\": \"manager\",\n\"createdAt\": \"2018-03-08T11:41:54.956Z\",\n\"_id\": \"5aa12182de3cb40014969c63\",\n\"firstName\": \"Kelly\",\n\"lastName\": \"Pala\",\n\"__v\": 0\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/users",    "title": "Créer un nouvel utilisateur",    "name": "PostUser",    "group": "User",    "description": "<p>Cette route permet de créer un nouvel utilisateur, il faut indiquer son role (manager ou citizen), son prénom et son nom. Il ne peut exister qu'un seul utilisateur avec la même combinaison nom/prenom</p>",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"manager\"",              "\"citizen\""            ],            "optional": true,            "field": "role",            "description": "<p>Le role de l'utilisateur, par défaut citizen</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de l'utilisateur</p>"          }        ]      },      "examples": [        {          "title": "Body Request Example:",          "content": "{\n\"firstName\" : \"Pierre\",\n\"lastName\": \"Baud\",\n\"role\":\"manager\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "201": [          {            "group": "201",            "optional": false,            "field": "created",            "description": "<p>L'utilisateur a été créé avec succès.</p>"          }        ],        "403": [          {            "group": "403",            "optional": false,            "field": "forbidden",            "description": "<p>L’entité fournie avec la requête n'est pas acceptée, car il existe déjà un utilisateur avec ce nom et ce prénom.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User"  },  {    "type": "put",    "url": "/users/:id",    "title": "Modifier un utilisateur",    "name": "UpdateUserByID",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Identifiant unique pour chaque utilisateur</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"manager\"",              "\"citizen\""            ],            "optional": true,            "field": "role",            "description": "<p>Le role de l'utilisateur, par défaut citizen</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": true,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": true,            "field": "lastName",            "description": "<p>Le nom de l'utilisateur</p>"          }        ]      },      "examples": [        {          "title": "Body Request Example:",          "content": "{\n\"role\":\"citizen\"\n}",          "type": "json"        }      ]    },    "description": "<p>Cette route permet de modifier un utilisateur, identifié par son id. On peut modifier soit un, soit plusieurs des attributs de l'utilisateur.</p>",    "error": {      "fields": {        "403": [          {            "group": "403",            "optional": false,            "field": "forbidden",            "description": "<p>L’entité fournie avec la requête n'est pas acceptée, car il existe déjà un utilisateur avec ce nom et ce prénom.</p>"          }        ],        "404": [          {            "group": "404",            "optional": false,            "field": "notFound",            "description": "<p>Utilisateur non trouvé.</p>"          }        ],        "422": [          {            "group": "422",            "optional": false,            "field": "unprocessableEntity",            "description": "<p>L’entité fournie avec la requête est incompréhensible ou incomplète.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User"  }]
